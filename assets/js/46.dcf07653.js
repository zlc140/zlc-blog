(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{348:function(t,l,s){"use strict";s.r(l);var _=s(1),i=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,l=t.$createElement,s=t._self._c||l;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"静态资源"}},[t._v("静态资源")]),t._v(" "),s("p",[t._v("一个前端网站的渲染通常静态资源加载的时间占有很大的比重，因此也成了最普遍的优化的点，现在对于静态资源的优化已经很丰富了\n一下列举一些常见的：")]),t._v(" "),s("ul",[s("li",[t._v("html语义化，减少使用table,hr等标签")]),t._v(" "),s("li",[t._v("减少资源请求次数，合并css,js文件，雪碧图")]),t._v(" "),s("li",[t._v("静态资源cdn分发 客户端可以通过最佳的网络链路加载静态资源")]),t._v(" "),s("li",[t._v("css,js压缩，图片压缩，gzip压缩")]),t._v(" "),s("li",[t._v("静态资源缓存")]),t._v(" "),s("li",[t._v("图片的懒加载")]),t._v(" "),s("li",[t._v("资源按需加载")])])])}],!1,null,null,null);l.default=i.exports}}]);